1. Count()
쿼리를 통해 조회되는 모든 열을 구해달라는 함수

count(*) => 쿼리문의 모든 행의 개수를 구한다. null도 포함한다.
count(칼럼 명) => 쿼리문의 모든 행의 개수를 구하지만 null은 포함하지 않는다.

ex) select count(distinct author_fname)
author_fname에서 중복된 데이터를 제거한 후에 행의 개수를 세어 출력한다.

2. Group By
중복되는 데이터를 묶어서 하나의 행으로 묶는다.
=> 이렇게 묶으면 group by만의 유용한 쿼리문을 던질 수 있다.

Group By가 된 테이블에 Count()를 사용하면 그룹마가 열이 몇 개인지 계산하여 출력한다.

select * from books group by author_lname;
=> 불가능한 쿼리문이다.
=> author_lname으로 데이터가 묶여 있다. => author_lname에 3개의 데이터가 묶여서 보여지고 있다면 
=> 제목, 출간연도, 페이지 수는 3개의 로우 중 어떤 것을 보여줘야 되나? => 하나의 행만 보여줘야 하는데?
=> 이런 오류가 발생하는 것이다.



2. Min/Max
Min은 특정 행에서 최소값을 찾는다./ Max는 특정 행에서 최대값을 찾는다.

★ 집계 함수 작업을 할 떄는 공통적인 요소가 있는 것을 대상으로 수행할 수 있다.
=> 그렇기에 select Max(pages), title from books; => 오류가 발생한다.
Max를 통해 pages가 가장 많은 값을 찾아서 출력했지만 title은 모든 것을 출력해야 한다. => max행은 1이고 title의 행은 여러 개이다. => 불일치

문자열 대상으로 min, max를 사용하면 알파벳의 순서대로 출력된다.
Apple, Banana, aa
min => aa
max => Banana



3.  서브쿼리 Min/Max
서브 쿼리란 상위 쿼리 안에 들어 있는 또 다른 쿼리이다.
서브 쿼리는 가로로 묶여줘 있고 전체 sql문은 서브 쿼리를 먼저 실행하고 그 결과값을 이용해서 전체 sql문을 실행한다.



4. 다중 열 group by
ex) select author_fname, author_lname from books group by author_fname, author_lname;
author_fname, authore_lname이 그룹화를 한다. => 근데 중복되는 데이터가 있다. => 그래서 그룹화를 해야 하는데 다른 열에서는 다른 값을 가지고 있다. => 중복이 되어 있지 않다고 판단하고 고유의 행을 만든다.



















